/****************************   this is server part   *************************************************/







/*********************************   this is client part    ********************************************/

	  
			case 3:
	  		{
	  			//cout<<"Enter filename to select: ";
	  			//cin>>filename;
	  			strcpy(buf, "select "); //select ...
	  			//strcat(buf, filename); //select filename
			  	send(sock, buf, 100, 0); //sending "select "
					  	recv(sock, buf, 100, 0);
					  	cout<<buf;
			  	/*recv(sock, &size, sizeof(int), 0); //receiving the file size
			  	if(!size)
	    			{
	      				cout<<"No such file on the remote directory\n\n";
	      				break;
	    			}
	 		 	int* f=new int[size];  //f = malloc(size); creating a blank file
	  			recv(sock, f, size, 0); //receiving the file content
	  			while(1)
	    			{
	      				filehandle = open(filename, O_RDONLY, 0660); //file descriptor for an open file
	      				if(filehandle == -1)
					{
		  				perror("Error in file descriptor.");
		  				//sprintf(filename + strlen(filename), "%d", i);//needed only if same directory is used for both server and client
					}
	      				else 
	      					break;
	    			}
	  			write(filehandle, f, size);
	  			close(filehandle);
	  			strcpy(buf, "cat >"); // cat
	  			strcat(buf, filename); //cat filename
	  			system(buf); //command calling*/
	  			break;
	  		}